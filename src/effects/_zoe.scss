// ===
// Zoe
// ===
.hover-effect figure.effect-zoe {
  figcaption {
    @include transition(transform $hover-effect-zoe-speed);
    @include translate3d(0, 100%, 0);

    background: $hover-effect-zoe-border-color;
    bottom: 0;
    color: $hover-effect-zoe-color;
    height: 3.75em;
    padding: 1em;
    top: auto;
  }

  h2 {
    display: inline-block;
    float: left;
  }

  p.icon-links a {
    color: $hover-effect-zoe-color;
    float: right;
    font-size: 1.4em;

    &:hover,
    &:focus {
      color: $hover-effect-zoe-color-dark;
    }

    span::before {
      display: inline-block;
      -moz-osx-font-smoothing: grayscale;
      -webkit-font-smoothing: antialiased;
      padding: 8px 10px;
      speak: none;
    }
  }

  p.description {
    @include transition(opacity $hover-effect-zoe-speed);
    @include backface-visibility(hidden); /* Fix for Chrome 37.0.2062.120 (Mac) */

    bottom: 8em;
    color: $hover-effect-zoe-border-color;
    font-size: 90%;
    opacity: 0;
    padding: 2em;
    position: absolute;
    text-transform: none;
  }

  h2,
  p.icon-links a {
    @include transition(transform $hover-effect-zoe-speed);
    @include translate3d(0, 200%, 0);
  }

  &:hover {
    p.description {
      opacity: 1;
    }

    figcaption,
    h2,
    p.icon-links a {
      @include translate3d(0, 0, 0);
    }

    h2 {
      @include transition-delay($hover-effect-zoe-delay);
    }

    p.icon-links {
      a:nth-child(3) {
        @include transition-delay($hover-effect-zoe-delay * 2);
      }

      a:nth-child(2) {
        @include transition-delay($hover-effect-zoe-delay * 3);
      }

      a:first-child {
        @include transition-delay($hover-effect-zoe-delay * 4);
      }
    }
  }
}
